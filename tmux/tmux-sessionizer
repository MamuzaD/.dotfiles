#!/usr/bin/env bash
CONFIG_DIR="${XDG_CONFIG_HOME:-$HOME/.config}/tmux-sessionizer"
CONFIG_FILE="$CONFIG_DIR/tmux-sessionizer.conf"

# config file example
# ------------------------
# # file: ~/.config/tmux-sessionizer/tmux-sessionizer.conf
# # If set this override the default TS_SEARCH_PATHS (~/ ~/personal ~/personal/dev/env/.config)
# TS_SEARCH_PATHS=(~/)
# # If set this add additional search paths to the default TS_SEARCH_PATHS
# # The number prefix is the depth for the Path [OPTIONAL]
# TS_EXTRA_SEARCH_PATHS=(~/ghq:3 ~/Git:3 ~/.config:2)
# # if set this override the TS_MAX_DEPTH (1)
# TS_MAX_DEPTH=2
TS_SEARCH_PATHS=(~/ ~/personal)
TS_EXTRA_SEARCH_PATHS=()
TS_MAX_DEPTH=1
MARGIN=1,1
HEIGHT=100%
# ------------------------

# test if the config file exists
if [[ -f "$CONFIG_FILE" ]]; then
  # shellcheck source=/dev/null
  source "$CONFIG_FILE"
fi

sanity_check() {
  if ! command -v tmux &>/dev/null; then
    echo "tmux is not installed. Please install it first."
    exit 1
  fi

  if ! command -v fzf &>/dev/null; then
    echo "fzf is not installed. Please install it first."
    exit 1
  fi
}

switch_to() {
  if [[ -z $TMUX ]]; then
    tmux attach-session -t "$1"
  else
    tmux switch-client -t "$1"
  fi
}

has_session() {
  tmux list-sessions | grep -q "^$1:"
}

hydrate() {
  if [ -f "$2/.tmux-sessionizer" ]; then
    tmux send-keys -t "$1" "source $2/.tmux-sessionizer" c-M
  elif [ -f "$HOME/.tmux-sessionizer" ]; then
    tmux send-keys -t "$1" "source $HOME/.tmux-sessionizer" c-M
  fi
}

sanity_check

# Add any extra search paths to the TS_SEARCH_PATHS array
# e.g : EXTRA_SEARCH_PATHS=("$HOME/extra1:4" "$HOME/extra2")
# note : Path can be suffixed with :number to limit or extend the depth of the search for the Path

if [[ ${#TS_EXTRA_SEARCH_PATHS[@]} -gt 0 ]]; then
  TS_SEARCH_PATHS+=("${TS_EXTRA_SEARCH_PATHS[@]}")
fi

# vars
tmux_sessions_count=$(tmux list-sessions -F "[TMUX] #{session_name}" 2>/dev/null | wc -l)
if [[ -n "${TMUX}" ]]; then
  current_session=$(tmux display-message -p '#S')
else
  currrent_session="none"
fi
# utility function to find directories
find_dirs() {
  # new session option
  echo "[NEW]"

  # show delete session option if there is tmux
  if [[ "$tmux_sessions_count" -gt 0 ]]; then
    echo "[DEL]"
  fi

  # list TMUX sessions
  if [[ -n "${TMUX}" ]]; then
    tmux_sessions_arr=$(tmux list-sessions -F "[TMUX] #{session_name}" 2>/dev/null | grep -vFx "[TMUX] $current_session")
  else
    tmux_sessions_arr=$(tmux list-sessions -F "[TMUX] #{session_name}" 2>/dev/null)
  fi

  if [[ -n "$tmux_sessions_arr" ]]; then
    echo "$tmux_sessions_arr" | sort
  fi

  # note: TS_SEARCH_PATHS is an array of paths to search for directories
  # if the path ends with :number, it will search for directories with a max depth of number ;)
  # if there is no number, it will search for directories with a max depth defined by TS_MAX_DEPTH or 1 if not set
  all_dirs=()
  for entry in "${TS_SEARCH_PATHS[@]}"; do
    # Check if entry as :number as suffix then adapt the maxdepth parameter
    if [[ "$entry" =~ ^([^:]+):([0-9]+)$ ]]; then
      path="${BASH_REMATCH[1]}"
      depth="${BASH_REMATCH[2]}"
    else
      path="$entry"
    fi

    if [[ -d "$path" ]]; then
      while IFS= read -r dir; do
        dir=$(echo "$dir" | sed "s|$HOME|~|g") # path formatting
        all_dirs+=("$dir")
      done < <(
        find "$path" -mindepth 1 -maxdepth "${depth:-${TS_MAX_DEPTH:-1}}" \
          -path '*/.git' -prune -o -type d \
          -not -path '*/\.*' \
          -print
      )
    fi

    # previous implementation
    #   [[ -d "$path" ]] && find "$path" -mindepth 1 -maxdepth "${depth:-${TS_MAX_DEPTH:-1}}" \
    #     -path '*/.git' -prune -o -type d \
    #     -not -path '*/\.*' \
    #     -print
  done

  printf "%s\n" "${all_dirs[@]}" | sort
}

# just to simplify preview script
# todo: look into better way for ls/exa
fzf_preview=$(
  cat <<'EOF'
  case {} in
    "[NEW]") echo "Create a new session" ;;
    "[DEL]") echo "Delete a session"; tmux list-sessions -F "- #S" ;;
    "[TMUX]"*) tmux list-windows -t "$(echo {} | sed "s/^\[TMUX\] //")" \
      -F "#I - #W#F | #{pane_current_path}" 2>/dev/null | sed "s|$HOME|~|g" ;;
    "~"*) echo {}; path={}; \
      eval /bin/exa -1 --icons --group-directories-first "$path";;
    *) echo "No preview available" ;;
  esac
EOF
)

delete_fzf_preview=$(
  cat <<'EOF'
  case {} in
    "[ALL]") echo "Delete all sessions except current one" ;;
    *) tmux list-windows -t "$(echo {} | sed "s/^\[TMUX\] //")" \
      -F "#I - #W#F | #{pane_current_path}" 2>/dev/null | sed "s|$HOME|~|g" ;;
  esac
EOF
)

# just to simplify fzf styling
fzf_default_opts=(
  --bind "ctrl-j:down,ctrl-k:up"
  --color "info:#7AA2f7,prompt:#7AA2f7,spinner:#7AA2f7,header:#7AA2f7,pointer:#7AA2f7,preview-bg:#1b2538"
  --border=rounded
  --border-label=tmux-sessionizer
  --border-label-pos=0
  --padding=1
  --reverse
  --cycle
  --prompt="> "
  --margin="$MARGIN"
  --height "$HEIGHT"
  --header="Current Session: $current_session | Total: $tmux_sessions_count"
)

if [[ $# -eq 1 ]]; then
  selected="$1"
else
  selected=$(
    find_dirs | fzf \
      "${fzf_default_opts[@]}" \
      --preview "$fzf_preview"
  )
fi

if [[ -z $selected ]]; then
  exit 0
fi

if [[ "$selected" == "[NEW]" ]]; then
  # prompt w/o tmux
  if [[ -z $TMUX ]]; then
    read -p "name > " session_name
    tmux new-session -ds "$session_name"
    switch_to "$session_name"
  # run in tmux
  else
    tmux command-prompt -p "name > " "run-shell 'tmux new-session -ds %1 && tmux switch-client -t %1'"
  fi
  exit 0
fi

if [[ "$selected" == "[DEL]" ]]; then
  session_to_del=$(
    (
      echo "[ALL]"
      tmux list-sessions -F '#S'
    ) | fzf \
      "${fzf_default_opts[@]}" \
      --prompt "del > " \
      --preview "$delete_fzf_preview"
  )
  if [[ -n "$session_to_del" ]]; then
    # delete all session except current one
    if [[ "$session_to_del" == "[ALL]" ]]; then
      all_sessions=$(tmux list-sessions -F '#S' | grep -v "^$current_session$")
      for s in $all_sessions; do
        tmux kill-session -t "$s"
      done
    # delete specific session
    else
      tmux kill-session -t "$session_to_del"
      echo "Session '$session_to_del' deleted."
    fi
  fi
  exit 0
fi

if [[ "$selected" =~ ^\[TMUX\]\ (.+)$ ]]; then
  selected="${BASH_REMATCH[1]}"
fi

selected_name=$(basename "$selected" | tr . _)
tmux_running=$(pgrep tmux)

if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
  tmux new-session -ds "$selected_name" -c "$selected"
  hydrate "$selected_name" "$selected"
fi

if ! has_session "$selected_name"; then
  tmux new-session -ds "$selected_name" -c "$selected"
  hydrate "$selected_name" "$selected"
fi

switch_to "$selected_name"
